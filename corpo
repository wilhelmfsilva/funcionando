#include <stdio.h>
#include <time.h>
#include <conio2.h>
#include "movimenta.h"

int velocidade(int nivel){
    return 850-(25*nivel);
}

int niveis(int linhas){
    if(linhas<=300){
        return (linhas/10);
    }
    else{return 30;}
}


void marcapeca(char peca, int x, int y, int posicao[25][22]){
    int i, j;

    if(peca=='i'){
        for(i=0; i<8; i++){
            posicao[y][x+i]=2;
        }
    }
    if(peca=='o'){
        for(i=0; i<4; i++){
            posicao[y][x+i+2]=3;
        }
        for(i=0; i<4; i++){
            posicao[y+1][x+i+2]=3;
        }
    }
    if(peca=='t'){
        for(i=0; i<6; i++){
            posicao[y][x+i]=4;
        }
        for(i=0; i<2; i++){
            posicao[y+1][x+i+2]=4;
        }
    }
    if(peca=='l'){
        for(i=0; i<2; i++){
            posicao[y][x+i+4]=5;
        }
        for(i=0; i<6; i++){
            posicao[y+1][x+i]=5;
        }
    }
    if(peca=='s'){
        for(i=0; i<4; i++){
            posicao[y][x+i+2]=6;
        }
        for(i=0; i<4; i++){
            posicao[y+1][x+i]=6;
        }
    }
    if(peca=='z'){
        for(i=0; i<4; i++){
            posicao[y][x+i]=7;
        }
        for(i=0; i<4; i++){
            posicao[y+1][x+i+2]=7;
        }
    }
    if(peca=='p'){
        for(i=0; i<6; i++){
            posicao[y][x+i]=8;
        }
        for(i=0; i<2; i++){
            posicao[y+1][x+i+4]=8;
        }
    }
    if(peca=='a'){
        for(i=0; i<4; i++){
            for(j=0; j<2; j++){
                posicao[y+i][x+j]=2;
            }
        }
    }
    if(peca=='b'){
        for(i=0; i<2; i++){
            posicao[y][x+i+2]=4;
        }
        for(i=0; i<4; i++){
            posicao[y+1][x+i]=4;
        }
        for(i=0; i<2; i++){
            posicao[y+2][x+i+2]=4;
        }
    }
}

void apagapeca(char peca, int x, int y, int posicao[25][22]){
    int i, j;

    if(peca=='i'){
        for(i=0; i<8; i++){
            posicao[y][x+i]=0;
        }
    }
    if(peca=='o'){
        for(i=0; i<4; i++){
            posicao[y][x+i+2]=0;
        }
        for(i=0; i<4; i++){
            posicao[y+1][x+i+2]=0;
        }
    }
    if(peca=='t'){
        for(i=0; i<6; i++){
            posicao[y][x+i]=0;
        }
        for(i=0; i<2; i++){
            posicao[y+1][x+i+2]=0;
        }
    }
    if(peca=='l'){
        for(i=0; i<2; i++){
            posicao[y][x+i+4]=0;
        }
        for(i=0; i<6; i++){
            posicao[y+1][x+i]=0;
        }
    }
    if(peca=='s'){
        for(i=0; i<4; i++){
            posicao[y][x+i+2]=0;
        }
        for(i=0; i<4; i++){
            posicao[y+1][x+i]=0;
        }
    }
    if(peca=='z'){
        for(i=0; i<4; i++){
            posicao[y][x+i]=0;
        }
        for(i=0; i<4; i++){
            posicao[y+1][x+i+2]=0;
        }
    }
    if(peca=='p'){
        for(i=0; i<6; i++){
            posicao[y][x+i]=0;
        }
        for(i=0; i<2; i++){
            posicao[y+1][x+i+4]=0;
        }
    }
    if(peca=='a'){
        for(i=0; i<4; i++){
            for(j=0; j<2; j++){
                posicao[y+i][x+j]=0;
            }
        }
    }
    if(peca=='b'){
        for(i=0; i<2; i++){
            posicao[y][x+i+2]=0;
        }
        for(i=0; i<4; i++){
            posicao[y+1][x+i]=0;
        }
        for(i=0; i<2; i++){
            posicao[y+2][x+i+2]=0;
        }
    }
}

char sorteia(){
    int numero;
    char peca;

    srand(time(NULL));
    numero = rand()%7+1;

    switch(numero){
    case 1:
        peca='i';
        break;
    case 2:
        peca='o';
        break;
    case 3:
        peca='t';
        break;
    case 4:
        peca='l';
        break;
    case 5:
        peca='z';
        break;
    case 6:
        peca='s';
        break;
    case 7:
        peca='p';
        break;
    }

//    gotoxy(32, 10);
//        textcolor(WHITE);
//            printf("%c", peca);

    return peca;
}

void desenhapeca(int posicao[25][22]){
    int x, y;

    for(y=0; y<25; y++){
        for(x=0; x<22; x++){
            if(posicao[y][x]==0){
                gotoxy(x+1,y+1);
                    textcolor(BLACK);
                    printf("\xDB");
            }
            else if(posicao[y][x]==1){
                gotoxy(x+1,y+1);
                    textcolor(DARKGRAY);
                    printf("\xDB");
            }
            else if(posicao[y][x]==2){
                gotoxy(x+1,y+1);
                    textcolor(WHITE);
                    printf("\xDB");
            }
            else if(posicao[y][x]==3){
                gotoxy(x+1,y+1);
                    textcolor(YELLOW);
                    printf("\xDB");
            }
            else if(posicao[y][x]==4){
                gotoxy(x+1,y+1);
                    textcolor(MAGENTA);
                    printf("\xDB");
            }
            else if(posicao[y][x]==5){
                gotoxy(x+1,y+1);
                    textcolor(GREEN);
                    printf("\xDB");
            }
            else if(posicao[y][x]==6){
                gotoxy(x+1,y+1);
                    textcolor(RED);
                    printf("\xDB");
            }
            else if(posicao[y][x]==7){
                gotoxy(x+1,y+1);
                    textcolor(BLUE);
                    printf("\xDB");
            }
            else if(posicao[y][x]==8){
                gotoxy(x+1,y+1);
                    textcolor(CYAN);
                    printf("\xDB");
            }
        }
    }
}

int limpalinha(int posicao[25][22]){
    int i, j, a, b, flag;

    for(i=0;i<25;i++){
        flag=0;
        for(j=0;j<22;j++){
            if(posicao[i][j]>=2){
                flag++;
            }
        }
        if(flag==20){
            for(a=i;a>0;a--){
                for(b=1;b<21;b++){
                    posicao[a][b]= posicao[a-1][b];
                }
            }
            for(a=1; a<21; a++){
                posicao[0][a]=0;
            }
            posicao[0][0]=1;
            posicao[0][21]=1;
            return 1;
        }
    }
    return 0;
}

int gameover(){
    return 0;
}

int main(){
    int x=7, y=0, teclaum, tecladois, linhas=0, pontuacao=0;
    int msec = 0, trigger = 900, nivel, flag=0;
    char peca;
    int posicao[25][22]={{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                         {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
                         {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}};

    for(; gameover()==0;){
        peca='\0';
        x=7;
        peca=sorteia();

        for(y=0; verificabaixo(peca,x,y,posicao)==0; y++){

            gotoxy(55, 3);
                printf("linhas==%d", linhas);

            clock_t before = clock();
            msec=0;

            do{

                if(kbhit()!=0){
                    teclaum=getch();
                    tecladois=getch();
                    if((teclaum==224 && tecladois==77)&&(verificadireita(peca,x,y,posicao)==0)){
                        x+=2;
                        apagapeca(peca,x-2,y,posicao);
                    }
                    if((teclaum==224 && tecladois==75)&&(verificaesquerda(peca,x,y,posicao)==0)){
                        x-=2;
                        apagapeca(peca,x+2,y,posicao);
                    }
                    if(teclaum==224 && tecladois==80){
                        trigger/=5;
                        flag=1;
                    }
                    if(teclaum==224 && tecladois==72){
                        apagapeca(peca,x,y,posicao);
                        peca=girapeca(peca,x,y,posicao);
                    }

                    marcapeca(peca,x,y,posicao);
                    }

                else{
                    marcapeca(peca,x,y,posicao);
                }

                desenhapeca(posicao);
                imprimematriz(posicao);

                clock_t difference = clock() - before;
                msec = difference * 1000 / CLOCKS_PER_SEC;
            }while ( msec < trigger );

            if(flag==1){
                flag=0;
                trigger*=5;
            }

            if(verificabaixo(peca,x,y+1,posicao)==0){
                apagapeca(peca,x,y,posicao);
            }

            linhas+=limpalinha(posicao);
            nivel=niveis(linhas);
            trigger=velocidade(nivel);
        }
    }

    return 0;
}
